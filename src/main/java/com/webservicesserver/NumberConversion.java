package com.webservicesserver;

import javax.annotation.Generated;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * The Number Conversion Web Service, implemented with Visual DataFlex, provides functions that convert numbers into words or dollar amounts.
 *
 * This class was generated by Apache CXF 3.5.0
 * 2022-02-19T12:47:24.653-03:00
 * Generated source version: 3.5.0
 *
 */
@WebServiceClient(name = "NumberConversion",
                  wsdlLocation = "file:/Users/luismauricioalamo/Public/sources/springbootcxfsoapclientwithtls/src/main/resources/NumberConversion.wsdl",
                  targetNamespace = "http://www.dataaccess.com/webservicesserver/")
@Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-02-19T12:47:24.653-03:00", comments = "Apache CXF 3.5.0")
public class NumberConversion extends Service {

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-02-19T12:47:24.653-03:00")
    public final static URL WSDL_LOCATION;

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-02-19T12:47:24.653-03:00")
    public final static QName SERVICE = new QName("http://www.dataaccess.com/webservicesserver/", "NumberConversion");
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-02-19T12:47:24.653-03:00")
    public final static QName NumberConversionSoap = new QName("http://www.dataaccess.com/webservicesserver/", "NumberConversionSoap");
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-02-19T12:47:24.653-03:00")
    public final static QName NumberConversionSoap12 = new QName("http://www.dataaccess.com/webservicesserver/", "NumberConversionSoap12");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/luismauricioalamo/Public/sources/springbootcxfsoapclientwithtls/src/main/resources/NumberConversion.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(NumberConversion.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/Users/luismauricioalamo/Public/sources/springbootcxfsoapclientwithtls/src/main/resources/NumberConversion.wsdl");
        }
        WSDL_LOCATION = url;
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-02-19T12:47:24.653-03:00")
    public NumberConversion(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-02-19T12:47:24.653-03:00")
    public NumberConversion(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-02-19T12:47:24.653-03:00")
    public NumberConversion() {
        super(WSDL_LOCATION, SERVICE);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-02-19T12:47:24.653-03:00")
    public NumberConversion(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-02-19T12:47:24.653-03:00")
    public NumberConversion(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-02-19T12:47:24.653-03:00")
    public NumberConversion(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns NumberConversionSoapType
     */
    @WebEndpoint(name = "NumberConversionSoap")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-02-19T12:47:24.653-03:00")
    public NumberConversionSoapType getNumberConversionSoap() {
        return super.getPort(NumberConversionSoap, NumberConversionSoapType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns NumberConversionSoapType
     */
    @WebEndpoint(name = "NumberConversionSoap")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-02-19T12:47:24.653-03:00")
    public NumberConversionSoapType getNumberConversionSoap(WebServiceFeature... features) {
        return super.getPort(NumberConversionSoap, NumberConversionSoapType.class, features);
    }


    /**
     *
     * @return
     *     returns NumberConversionSoapType
     */
    @WebEndpoint(name = "NumberConversionSoap12")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-02-19T12:47:24.653-03:00")
    public NumberConversionSoapType getNumberConversionSoap12() {
        return super.getPort(NumberConversionSoap12, NumberConversionSoapType.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns NumberConversionSoapType
     */
    @WebEndpoint(name = "NumberConversionSoap12")
    @Generated(value = "org.apache.cxf.tools.wsdlto.WSDLToJava", date = "2022-02-19T12:47:24.653-03:00")
    public NumberConversionSoapType getNumberConversionSoap12(WebServiceFeature... features) {
        return super.getPort(NumberConversionSoap12, NumberConversionSoapType.class, features);
    }

}
